---
on:
  push:
    branches:
      - main
name: Build
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: asia.gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
        
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3307
          mysql version: "5.7"
          mysql database: "testdb"
          mysql user: "user"
          mysql password: "password"

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Setup go.work
        run: go work init cocotola-api cocotola-auth lib proto

      - uses: bazelbuild/setup-bazelisk@v2

      - name: Mount bazel cache
        id: bazel_cache
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel

      - name: Check cache
        run: ${{ steps.bazel_cache.outputs.cache-hit }}

      - name: bazel
        run: bazel info

      - name: Test
        run: make test

      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.lcov

      # https://github.com/google-github-actions/setup-gcloud#authorization

      # https://docs.github.com/ja/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-google-cloud-platform

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Build
        run: bazelisk build //cocotola-api/src:tarball

      - name: Digest
        run: cat bazel-bin/cocotola-api/src/image/index.json | jq -r '.manifests[0].digest' | cut -d ':' -f 2

      - name: Digest
        id: digest
        run: echo "digest=$(cat bazel-bin/cocotola-api/src/image/index.json | jq -r '.manifests[0].digest' | cut -d ':' -f 2)" >> $GITHUB_OUTPUT

      - name: Push
        run: REMOTE_TAG=${{ steps.digest.outputs.digest }} make docker-push
